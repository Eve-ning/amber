#include "com_nn.h"

cOM_NN::cOM_NN()
{

    STATMSG("Empty cOM_NN initialized.")
    xAxis           =   256;
    yAxis           =   192;
    offset          =   0;     
    noteType        =   1;     
    hitsoundType    =   0;     
    sampleSet       =   0;    
    addition        =   0;
    customSet       =   0;
    volume          =   0;
    hitsoundFile    =   "";  
    
    keys            =   0;
    
}

cOM_NN::cOM_NN(QString HO)
{
    // splitComma [0] [1] [2]  [3][4] 
    // splitColon                     [0][1][2][3][4] 
    // REFERENCE  448,192,1799,5, 6,  1: 1: 2: 70:audio.mp3
    
    QStringList HO_splitComma,
                HO_splitColon;
    HO_splitComma = HO.split(",", QString::SkipEmptyParts);
    HO_splitColon = HO_splitComma[HO_splitComma.size() - 1]
                        .split(":", QString::KeepEmptyParts);
    
    //Assignment to Values
    xAxis           =   HO_splitComma[0];
    yAxis           =   HO_splitComma[1];
    offset          =   HO_splitComma[2];     
    noteType        =   HO_splitComma[3];     
    hitsoundType    =   HO_splitComma[4];     
    sampleSet       =   HO_splitColon[0];    
    addition        =   HO_splitColon[1];
    customSet       =   HO_splitColon[2];
    volume          =   HO_splitColon[3];
    hitsoundFile    =   HO_splitColon[4];    
}

void cOM_NN::setXAxis       (unsigned short  newXAxis       ){ xAxis        = newXAxis       ; return; }
void cOM_NN::setYAxis       (unsigned short  newYAxis       ){ yAxis        = newYAxis       ; return; }
void cOM_NN::setOffset      (double          newOffset      ){ offset       = newOffset      ; return; }
void cOM_NN::setNoteType    (unsigned short  newNoteType    ){ noteType     = newNoteType    ; return; }
void cOM_NN::setHitsoundType(unsigned short  newHitsoundType){ hitsoundType = newHitsoundType; return; }
void cOM_NN::setSampleSet   (unsigned short  newSampleSet   ){ sampleSet    = newSampleSet   ; return; }
void cOM_NN::setAddition    (unsigned short  newAddition    ){ addition     = newAddition    ; return; }
void cOM_NN::setCustomSet   (unsigned short  newCustomSet   ){ customSet    = newCustomSet   ; return; }
void cOM_NN::setVolume      (unsigned short  newVolume      ){ volume       = newVolume      ; return; }
void cOM_NN::setHitsoundFile(QString         newHitsoundFile){ hitsoundFile = newHitsoundFile; return; }

unsigned short cOM_NN::getColumn() const
{
    if (keys == 0)
    {
        STATMSG("Keys not Specified, cannot get column");
        return 0;
    }
    
    return round(((xAxis / 512 * keys * 2 + 1) / 2) - 1);
}

void cOM_NN::setKeys(unsigned short newKeys)
{
    keys = newKeys;
}

void cOM_NN::setColumn(unsigned short newColumn)
{
    if (keys == 0)
    {
        STATMSG("Keys not Specified, cannot set column");
        return;
    }    
    
    // This function changes xAxis according to newColumn
    xAxis = round(((newColumn + 1) * 2 - 1) / 2 * 512 / keys);
}
